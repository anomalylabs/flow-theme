/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/bootstrap.native/dist/bootstrap-native-v4.js":
/*!*******************************************************************!*\
  !*** ./node_modules/bootstrap.native/dist/bootstrap-native-v4.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Native Javascript for Bootstrap 4 v2.0.27 | Â© dnp_theme | MIT-License\n(function (root, factory) {\n  if (true) {\n    // AMD support:\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else { var bsn; }\n}(this, function () {\n  \n  /* Native Javascript for Bootstrap 4 | Internal Utility Functions\n  ----------------------------------------------------------------*/\n  \"use strict\";\n  \n  // globals\n  var globalObject = typeof global !== 'undefined' ? global : this||window,\n    DOC = document, HTML = DOC.documentElement, body = 'body', // allow the library to be used in <head>\n  \n    // Native Javascript for Bootstrap Global Object\n    BSN = globalObject.BSN = {},\n    supports = BSN.supports = [],\n  \n    // function toggle attributes\n    dataToggle    = 'data-toggle',\n    dataDismiss   = 'data-dismiss',\n    dataSpy       = 'data-spy',\n    dataRide      = 'data-ride',\n  \n    // components\n    stringAlert     = 'Alert',\n    stringButton    = 'Button',\n    stringCarousel  = 'Carousel',\n    stringCollapse  = 'Collapse',\n    stringDropdown  = 'Dropdown',\n    stringModal     = 'Modal',\n    stringPopover   = 'Popover',\n    stringScrollSpy = 'ScrollSpy',\n    stringTab       = 'Tab',\n    stringTooltip   = 'Tooltip',\n    stringToast     = 'Toast',\n  \n    // options DATA API\n    dataAutohide      = 'data-autohide',\n    databackdrop      = 'data-backdrop',\n    dataKeyboard      = 'data-keyboard',\n    dataTarget        = 'data-target',\n    dataInterval      = 'data-interval',\n    dataHeight        = 'data-height',\n    dataPause         = 'data-pause',\n    dataTitle         = 'data-title',\n    dataOriginalTitle = 'data-original-title',\n    dataDismissible   = 'data-dismissible',\n    dataTrigger       = 'data-trigger',\n    dataAnimation     = 'data-animation',\n    dataContainer     = 'data-container',\n    dataPlacement     = 'data-placement',\n    dataDelay         = 'data-delay',\n  \n    // option keys\n    backdrop = 'backdrop', keyboard = 'keyboard', delay = 'delay',\n    content = 'content', target = 'target', currentTarget = 'currentTarget',\n    interval = 'interval', pause = 'pause', animation = 'animation',\n    placement = 'placement', container = 'container',\n  \n    // box model\n    offsetTop    = 'offsetTop',      offsetBottom   = 'offsetBottom',\n    offsetLeft   = 'offsetLeft',\n    scrollTop    = 'scrollTop',      scrollLeft     = 'scrollLeft',\n    clientWidth  = 'clientWidth',    clientHeight   = 'clientHeight',\n    offsetWidth  = 'offsetWidth',    offsetHeight   = 'offsetHeight',\n    innerWidth   = 'innerWidth',     innerHeight    = 'innerHeight',\n    scrollHeight = 'scrollHeight',   scrollWidth    = 'scrollWidth',\n    height         = 'height',\n  \n    // aria\n    ariaExpanded = 'aria-expanded',\n    ariaHidden   = 'aria-hidden',\n    ariaSelected = 'aria-selected',\n  \n    // event names\n    clickEvent    = 'click',\n    focusEvent    = 'focus',\n    hoverEvent    = 'hover',\n    keydownEvent  = 'keydown',\n    keyupEvent    = 'keyup',\n    resizeEvent   = 'resize', // passive\n    scrollEvent   = 'scroll', // passive\n    mouseHover = ('onmouseleave' in DOC) ? [ 'mouseenter', 'mouseleave'] : [ 'mouseover', 'mouseout' ],\n    // touch since 2.0.26\n    touchEvents = { start: 'touchstart', end: 'touchend', move:'touchmove' }, // passive\n    // originalEvents\n    showEvent     = 'show',\n    shownEvent    = 'shown',\n    hideEvent     = 'hide',\n    hiddenEvent   = 'hidden',\n    closeEvent    = 'close',\n    closedEvent   = 'closed',\n    slidEvent     = 'slid',\n    slideEvent    = 'slide',\n    changeEvent   = 'change',\n  \n    // other\n    getAttribute           = 'getAttribute',\n    setAttribute           = 'setAttribute',\n    hasAttribute           = 'hasAttribute',\n    createElement          = 'createElement',\n    appendChild            = 'appendChild',\n    innerHTML              = 'innerHTML',\n    getElementsByTagName   = 'getElementsByTagName',\n    preventDefault         = 'preventDefault',\n    getBoundingClientRect  = 'getBoundingClientRect',\n    querySelectorAll       = 'querySelectorAll',\n    getElementsByCLASSNAME = 'getElementsByClassName',\n    getComputedStyle       = 'getComputedStyle',  \n  \n    indexOf      = 'indexOf',\n    parentNode   = 'parentNode',\n    length       = 'length',\n    toLowerCase  = 'toLowerCase',\n    Transition   = 'Transition',\n    Duration     = 'Duration',\n    Webkit       = 'Webkit',\n    style        = 'style',\n    push         = 'push',\n    tabindex     = 'tabindex',\n    contains     = 'contains',\n  \n    active     = 'active',\n    showClass  = 'show',\n    collapsing = 'collapsing',\n    disabled   = 'disabled',\n    loading    = 'loading',\n    left       = 'left',\n    right      = 'right',\n    top        = 'top',\n    bottom     = 'bottom',\n  \n    // tooltip / popover\n    tipPositions = /\\b(top|bottom|left|right)+/,\n  \n    // modal\n    modalOverlay = 0,\n    fixedTop = 'fixed-top',\n    fixedBottom = 'fixed-bottom',\n  \n    // transitionEnd since 2.0.4\n    supportTransitions = Webkit+Transition in HTML[style] || Transition[toLowerCase]() in HTML[style],\n    transitionEndEvent = Webkit+Transition in HTML[style] ? Webkit[toLowerCase]()+Transition+'End' : Transition[toLowerCase]()+'end',\n    transitionDuration = Webkit+Duration in HTML[style] ? Webkit[toLowerCase]()+Transition+Duration : Transition[toLowerCase]()+Duration,\n  \n    // set new focus element since 2.0.3\n    setFocus = function(element){\n      element.focus ? element.focus() : element.setActive();\n    },\n  \n    // class manipulation, since 2.0.0 requires polyfill.js\n    addClass = function(element,classNAME) {\n      element.classList.add(classNAME);\n    },\n    removeClass = function(element,classNAME) {\n      element.classList.remove(classNAME);\n    },\n    hasClass = function(element,classNAME){ // since 2.0.0\n      return element.classList[contains](classNAME);\n    },\n  \n    // selection methods\n    getElementsByClassName = function(element,classNAME) { // returns Array\n      return [].slice.call(element[getElementsByCLASSNAME]( classNAME ));\n    },\n    queryElement = function (selector, parent) {\n      var lookUp = parent ? parent : DOC;\n      return typeof selector === 'object' ? selector : lookUp.querySelector(selector);\n    },\n    getClosest = function (element, selector) { //element is the element and selector is for the closest parent element to find\n      // source http://gomakethings.com/climbing-up-and-down-the-dom-tree-with-vanilla-javascript/\n      var firstChar = selector.charAt(0), selectorSubstring = selector.substr(1);\n      if ( firstChar === '.' ) {// If selector is a class\n        for ( ; element && element !== DOC; element = element[parentNode] ) { // Get closest match\n          if ( queryElement(selector,element[parentNode]) !== null && hasClass(element,selectorSubstring) ) { return element; }\n        }\n      } else if ( firstChar === '#' ) { // If selector is an ID\n        for ( ; element && element !== DOC; element = element[parentNode] ) { // Get closest match\n          if ( element.id === selectorSubstring ) { return element; }\n        }\n      }\n      return false;\n    },\n  \n    // event attach jQuery style / trigger  since 1.2.0\n    on = function (element, event, handler, options) {\n      options = options || false;\n      element.addEventListener(event, handler, options);\n    },\n    off = function(element, event, handler, options) {\n      options = options || false;\n      element.removeEventListener(event, handler, options);\n    },\n    one = function (element, event, handler, options) { // one since 2.0.4\n      on(element, event, function handlerWrapper(e){\n        handler(e);\n        off(element, event, handlerWrapper, options);\n      }, options);\n    },\n    // determine support for passive events\n    supportPassive = (function(){\n      // Test via a getter in the options object to see if the passive property is accessed\n      var result = false;\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function() {\n            result = true;\n          }\n        });\n        one(globalObject, 'testPassive', null, opts);\n      } catch (e) {}\n  \n      return result;\n    }()),\n    // event options\n    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n    passiveHandler = supportPassive ? { passive: true } : false,\n    // transitions\n    getTransitionDurationFromElement = function(element) {\n      var duration = supportTransitions ? globalObject[getComputedStyle](element)[transitionDuration] : 0;\n      duration = parseFloat(duration);\n      duration = typeof duration === 'number' && !isNaN(duration) ? duration * 1000 : 0;\n      return duration; // we take a short offset to make sure we fire on the next frame after animation\n    },\n    emulateTransitionEnd = function(element,handler){ // emulateTransitionEnd since 2.0.4\n      var called = 0, duration = getTransitionDurationFromElement(element);\n      duration ? one(element, transitionEndEvent, function(e){ !called && handler(e), called = 1; })\n               : setTimeout(function() { !called && handler(), called = 1; }, 17);\n    },\n    bootstrapCustomEvent = function (eventName, componentName, related) {\n      var OriginalCustomEvent = new CustomEvent( eventName + '.bs.' + componentName);\n      OriginalCustomEvent.relatedTarget = related;\n      this.dispatchEvent(OriginalCustomEvent);\n    },\n  \n    // tooltip / popover stuff\n    getScroll = function() { // also Affix and ScrollSpy uses it\n      return {\n        y : globalObject.pageYOffset || HTML[scrollTop],\n        x : globalObject.pageXOffset || HTML[scrollLeft]\n      }\n    },\n    styleTip = function(link,element,position,parent) { // both popovers and tooltips (target,tooltip,placement,elementToAppendTo)\n      var elementDimensions = { w : element[offsetWidth], h: element[offsetHeight] },\n          windowWidth = (HTML[clientWidth] || DOC[body][clientWidth]),\n          windowHeight = (HTML[clientHeight] || DOC[body][clientHeight]),\n          rect = link[getBoundingClientRect](),\n          scroll = parent === DOC[body] ? getScroll() : { x: parent[offsetLeft] + parent[scrollLeft], y: parent[offsetTop] + parent[scrollTop] },\n          linkDimensions = { w: rect[right] - rect[left], h: rect[bottom] - rect[top] },\n          isPopover = hasClass(element,'popover'),\n          topPosition, leftPosition,\n  \n          arrow = queryElement('.arrow',element),\n          arrowTop, arrowLeft, arrowWidth, arrowHeight,\n  \n          halfTopExceed = rect[top] + linkDimensions.h/2 - elementDimensions.h/2 < 0,\n          halfLeftExceed = rect[left] + linkDimensions.w/2 - elementDimensions.w/2 < 0,\n          halfRightExceed = rect[left] + elementDimensions.w/2 + linkDimensions.w/2 >= windowWidth,\n          halfBottomExceed = rect[top] + elementDimensions.h/2 + linkDimensions.h/2 >= windowHeight,\n          topExceed = rect[top] - elementDimensions.h < 0,\n          leftExceed = rect[left] - elementDimensions.w < 0,\n          bottomExceed = rect[top] + elementDimensions.h + linkDimensions.h >= windowHeight,\n          rightExceed = rect[left] + elementDimensions.w + linkDimensions.w >= windowWidth;\n  \n      // recompute position\n      position = (position === left || position === right) && leftExceed && rightExceed ? top : position; // first, when both left and right limits are exceeded, we fall back to top|bottom\n      position = position === top && topExceed ? bottom : position;\n      position = position === bottom && bottomExceed ? top : position;\n      position = position === left && leftExceed ? right : position;\n      position = position === right && rightExceed ? left : position;\n  \n      // update tooltip/popover class\n      element.className[indexOf](position) === -1 && (element.className = element.className.replace(tipPositions,position));\n  \n      // we check the computed width & height and update here\n      arrowWidth = arrow[offsetWidth]; arrowHeight = arrow[offsetHeight];\n  \n      // apply styling to tooltip or popover\n      if ( position === left || position === right ) { // secondary|side positions\n        if ( position === left ) { // LEFT\n          leftPosition = rect[left] + scroll.x - elementDimensions.w - ( isPopover ? arrowWidth : 0 );\n        } else { // RIGHT\n          leftPosition = rect[left] + scroll.x + linkDimensions.w;\n        }\n  \n        // adjust top and arrow\n        if (halfTopExceed) {\n          topPosition = rect[top] + scroll.y;\n          arrowTop = linkDimensions.h/2 - arrowWidth;\n        } else if (halfBottomExceed) {\n          topPosition = rect[top] + scroll.y - elementDimensions.h + linkDimensions.h;\n          arrowTop = elementDimensions.h - linkDimensions.h/2 - arrowWidth;\n        } else {\n          topPosition = rect[top] + scroll.y - elementDimensions.h/2 + linkDimensions.h/2;\n          arrowTop = elementDimensions.h/2 - (isPopover ? arrowHeight*0.9 : arrowHeight/2);\n        }\n      } else if ( position === top || position === bottom ) { // primary|vertical positions\n        if ( position === top) { // TOP\n          topPosition =  rect[top] + scroll.y - elementDimensions.h - ( isPopover ? arrowHeight : 0 );\n        } else { // BOTTOM\n          topPosition = rect[top] + scroll.y + linkDimensions.h;\n        }\n        // adjust left | right and also the arrow\n        if (halfLeftExceed) {\n          leftPosition = 0;\n          arrowLeft = rect[left] + linkDimensions.w/2 - arrowWidth;\n        } else if (halfRightExceed) {\n          leftPosition = windowWidth - elementDimensions.w*1.01;\n          arrowLeft = elementDimensions.w - ( windowWidth - rect[left] ) + linkDimensions.w/2 - arrowWidth/2;\n        } else {\n          leftPosition = rect[left] + scroll.x - elementDimensions.w/2 + linkDimensions.w/2;\n          arrowLeft = elementDimensions.w/2 - ( isPopover ? arrowWidth : arrowWidth/2 );\n        }\n      }\n  \n      // apply style to tooltip/popover and its arrow\n      element[style][top] = topPosition + 'px';\n      element[style][left] = leftPosition + 'px';\n  \n      arrowTop && (arrow[style][top] = arrowTop + 'px');\n      arrowLeft && (arrow[style][left] = arrowLeft + 'px');\n    };\n  \n  BSN.version = '2.0.27';\n  \n  /* Native Javascript for Bootstrap 4 | Alert\n  -------------------------------------------*/\n  \n  // ALERT DEFINITION\n  // ================\n  var Alert = function( element ) {\n    \n    // initialization element\n    element = queryElement(element);\n  \n    // bind, target alert, duration and stuff\n    var self = this, component = 'alert',\n      alert = getClosest(element,'.'+component),\n      triggerHandler = function(){ hasClass(alert,'fade') ? emulateTransitionEnd(alert,transitionEndHandler) : transitionEndHandler(); },\n      // handlers\n      clickHandler = function(e){\n        alert = getClosest(e[target],'.'+component);\n        element = queryElement('['+dataDismiss+'=\"'+component+'\"]',alert);\n        element && alert && (element === e[target] || element[contains](e[target])) && self.close();\n      },\n      transitionEndHandler = function(){\n        bootstrapCustomEvent.call(alert, closedEvent, component);\n        off(element, clickEvent, clickHandler); // detach it's listener\n        alert[parentNode].removeChild(alert);\n      };\n    \n    // public method\n    this.close = function() {\n      if ( alert && element && hasClass(alert,showClass) ) {\n        bootstrapCustomEvent.call(alert, closeEvent, component);\n        removeClass(alert,showClass);\n        alert && triggerHandler();\n      }\n    };\n  \n    // init\n    if ( !(stringAlert in element ) ) { // prevent adding event handlers twice\n      on(element, clickEvent, clickHandler);\n    }\n    element[stringAlert] = self;\n  };\n  \n  // ALERT DATA API\n  // ==============\n  supports[push]([stringAlert, Alert, '['+dataDismiss+'=\"alert\"]']);\n  \n  \n  /* Native Javascript for Bootstrap 4 | Button\n  ---------------------------------------------*/\n  \n  // BUTTON DEFINITION\n  // ===================\n  var Button = function( element ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // constant\n    var toggled = false, // toggled makes sure to prevent triggering twice the change.bs.button events\n  \n        // strings\n        component = 'button',\n        checked = 'checked',\n        LABEL = 'LABEL',\n        INPUT = 'INPUT',\n  \n      // private methods\n      keyHandler = function(e){ \n        var key = e.which || e.keyCode;\n        key === 32 && e[target] === DOC.activeElement && toggle(e);\n      },\n      preventScroll = function(e){ \n        var key = e.which || e.keyCode;\n        key === 32 && e[preventDefault]();\n      },\n      toggle = function(e) {\n        var label = e[target].tagName === LABEL ? e[target] : e[target][parentNode].tagName === LABEL ? e[target][parentNode] : null; // the .btn label\n        \n        if ( !label ) return; //react if a label or its immediate child is clicked\n  \n        var labels = getElementsByClassName(label[parentNode],'btn'), // all the button group buttons\n          input = label[getElementsByTagName](INPUT)[0];\n  \n        if ( !input ) return; // return if no input found\n  \n        // manage the dom manipulation\n        if ( input.type === 'checkbox' ) { //checkboxes\n          if ( !input[checked] ) {\n            addClass(label,active);\n            input[getAttribute](checked);\n            input[setAttribute](checked,checked);\n            input[checked] = true;\n          } else {\n            removeClass(label,active);\n            input[getAttribute](checked);\n            input.removeAttribute(checked);\n            input[checked] = false;\n          }\n  \n          if (!toggled) { // prevent triggering the event twice\n            toggled = true;\n            bootstrapCustomEvent.call(input, changeEvent, component); //trigger the change for the input\n            bootstrapCustomEvent.call(element, changeEvent, component); //trigger the change for the btn-group\n          }\n        }\n  \n        if ( input.type === 'radio' && !toggled ) { // radio buttons\n          // don't trigger if already active (the OR condition is a hack to check if the buttons were selected with key press and NOT mouse click)\n          if ( !input[checked] || (e.screenX === 0 && e.screenY == 0) ) {\n            addClass(label,active);\n            addClass(label,focusEvent);\n            input[setAttribute](checked,checked);\n            input[checked] = true;\n            bootstrapCustomEvent.call(input, changeEvent, component); //trigger the change for the input\n            bootstrapCustomEvent.call(element, changeEvent, component); //trigger the change for the btn-group\n  \n            toggled = true;\n            for (var i = 0, ll = labels[length]; i<ll; i++) {\n              var otherLabel = labels[i], otherInput = otherLabel[getElementsByTagName](INPUT)[0];\n              if ( otherLabel !== label && hasClass(otherLabel,active) )  {\n                removeClass(otherLabel,active);\n                otherInput.removeAttribute(checked);\n                otherInput[checked] = false;\n                bootstrapCustomEvent.call(otherInput, changeEvent, component); // trigger the change\n              }\n            }\n          }\n        }\n        setTimeout( function() { toggled = false; }, 50 );\n      },\n      focusHandler = function(e) {\n        addClass(e[target][parentNode],focusEvent);\n      },\n      blurHandler = function(e) {\n        removeClass(e[target][parentNode],focusEvent);\n      };\n  \n    // init\n    if ( !( stringButton in element ) ) { // prevent adding event handlers twice\n      on( element, clickEvent, toggle );\n      on( element, keyupEvent, keyHandler ), on( element, keydownEvent, preventScroll );\n  \n      var allBtns = getElementsByClassName(element, 'btn');\n      for (var i=0; i<allBtns.length; i++) {\n        var input = allBtns[i][getElementsByTagName](INPUT)[0];\n        on( input, focusEvent, focusHandler), on( input, 'blur', blurHandler);\n      }    \n    }\n  \n    // activate items on load\n    var labelsToACtivate = getElementsByClassName(element, 'btn'), lbll = labelsToACtivate[length];\n    for (var i=0; i<lbll; i++) {\n      !hasClass(labelsToACtivate[i],active) && queryElement('input:checked',labelsToACtivate[i]) \n                                            && addClass(labelsToACtivate[i],active);\n    }\n    element[stringButton] = this;\n  };\n  \n  // BUTTON DATA API\n  // =================\n  supports[push]( [ stringButton, Button, '['+dataToggle+'=\"buttons\"]' ] );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Carousel\n  ----------------------------------------------*/\n  \n  // CAROUSEL DEFINITION\n  // ===================\n  var Carousel = function( element, options ) {\n  \n    // initialization element\n    element = queryElement( element );\n  \n    // set options\n    options = options || {};\n  \n    // DATA API\n    var intervalAttribute = element[getAttribute](dataInterval),\n        intervalOption = options[interval],\n        intervalData = intervalAttribute === 'false' ? 0 : parseInt(intervalAttribute),  \n        pauseData = element[getAttribute](dataPause) === hoverEvent || false,\n        keyboardData = element[getAttribute](dataKeyboard) === 'true' || false,\n      \n        // strings\n        component = 'carousel',\n        paused = 'paused',\n        direction = 'direction',\n        carouselItem = 'carousel-item',\n        dataSlideTo = 'data-slide-to'; \n  \n    this[keyboard] = options[keyboard] === true || keyboardData;\n    this[pause] = (options[pause] === hoverEvent || pauseData) ? hoverEvent : false; // false / hover\n  \n    this[interval] = typeof intervalOption === 'number' ? intervalOption\n                   : intervalOption === false || intervalData === 0 || intervalData === false ? 0\n                   : isNaN(intervalData) ? 5000 // bootstrap carousel default interval\n                   : intervalData;\n  \n    // bind, event targets\n    var self = this, index = element.index = 0, timer = element.timer = 0, \n      isSliding = false, // isSliding prevents click event handlers when animation is running\n      isTouch = false, startXPosition = null, currentXPosition = null, endXPosition = null, // touch and event coordinates\n      slides = getElementsByClassName(element,carouselItem), total = slides[length],\n      slideDirection = this[direction] = left,\n      leftArrow = getElementsByClassName(element,component+'-control-prev')[0], \n      rightArrow = getElementsByClassName(element,component+'-control-next')[0],\n      indicator = queryElement( '.'+component+'-indicators', element ),\n      indicators = indicator && indicator[getElementsByTagName]( \"LI\" ) || [];\n  \n    // invalidate when not enough items\n    if (total < 2) { return; }\n  \n    // handlers\n    var pauseHandler = function () {\n        if ( self[interval] !==false && !hasClass(element,paused) ) {\n          addClass(element,paused);\n          !isSliding && ( clearInterval(timer), timer = null );\n        }\n      },\n      resumeHandler = function() {\n        if ( self[interval] !== false && hasClass(element,paused) ) {\n          removeClass(element,paused);\n          !isSliding && ( clearInterval(timer), timer = null );\n          !isSliding && self.cycle();\n        }\n      },\n      indicatorHandler = function(e) {\n        e[preventDefault]();\n        if (isSliding) return;\n  \n        var eventTarget = e[target]; // event target | the current active item\n  \n        if ( eventTarget && !hasClass(eventTarget,active) && eventTarget[getAttribute](dataSlideTo) ) {\n          index = parseInt( eventTarget[getAttribute](dataSlideTo), 10 );\n        } else { return false; }\n  \n        self.slideTo( index ); //Do the slide\n      },\n      controlsHandler = function (e) {\n        e[preventDefault]();\n        if (isSliding) return;\n  \n        var eventTarget = e.currentTarget || e.srcElement;\n  \n        if ( eventTarget === rightArrow ) {\n          index++;\n        } else if ( eventTarget === leftArrow ) {\n          index--;\n        }\n  \n        self.slideTo( index ); //Do the slide\n      },\n      keyHandler = function (e) {\n        if (isSliding) return;\n        switch (e.which) {\n          case 39:\n            index++;\n            break;\n          case 37:\n            index--;\n            break;\n          default: return;\n        }\n        self.slideTo( index ); //Do the slide\n      },\n      // touch events\n      toggleTouchEvents = function(toggle){\n        toggle( element, touchEvents.move, touchMoveHandler, passiveHandler );\n        toggle( element, touchEvents.end, touchEndHandler, passiveHandler );\n    },  \n      touchDownHandler = function(e) {\n        if ( isTouch ) { return; } \n          \n        startXPosition = parseInt(e.touches[0].pageX);\n  \n        if ( element.contains(e[target]) ) {\n          isTouch = true;\n          toggleTouchEvents(on);\n        }\n      },\n      touchMoveHandler = function(e) {\n        if ( !isTouch ) { e.preventDefault(); return; }\n  \n        currentXPosition = parseInt(e.touches[0].pageX);\n        \n        //cancel touch if more than one touches detected\n        if ( e.type === 'touchmove' && e.touches[length] > 1 ) {\n          e.preventDefault();\n          return false;\n        }\n      },\n      touchEndHandler = function(e) {\n        if ( !isTouch || isSliding ) { return }\n        \n        endXPosition = currentXPosition || parseInt( e.touches[0].pageX );\n  \n        if ( isTouch ) {\n          if ( (!element.contains(e[target]) || !element.contains(e.relatedTarget) ) && Math.abs(startXPosition - endXPosition) < 75 ) {\n            return false;\n          } else {\n            if ( currentXPosition < startXPosition ) {\n              index++;\n            } else if ( currentXPosition > startXPosition ) {\n              index--;        \n            }\n            isTouch = false;\n            self.slideTo(index);\n          }\n          toggleTouchEvents(off);            \n        }\n      },\n  \n      // private methods\n      isElementInScrollRange = function () {\n        var rect = element[getBoundingClientRect](),\n          viewportHeight = globalObject[innerHeight] || HTML[clientHeight]\n        return rect[top] <= viewportHeight && rect[bottom] >= 0; // bottom && top\n      },    \n      setActivePage = function( pageIndex ) { //indicators\n        for ( var i = 0, icl = indicators[length]; i < icl; i++ ) {\n          removeClass(indicators[i],active);\n        }\n        if (indicators[pageIndex]) addClass(indicators[pageIndex], active);\n      };\n  \n  \n    // public methods\n    this.cycle = function() {\n      if (timer) {\n        clearInterval(timer);\n        timer = null;\n      }\n  \n      timer = setInterval(function() {\n        isElementInScrollRange() && (index++, self.slideTo( index ) );\n      }, this[interval]);\n    };\n    this.slideTo = function( next ) {\n      if (isSliding) return; // when controled via methods, make sure to check again      \n      \n      var activeItem = this.getActiveIndex(), // the current active\n          orientation;\n      \n      // first return if we're on the same item #227\n      if ( activeItem === next ) {\n        return;\n      // or determine slideDirection\n      } else if  ( (activeItem < next ) || (activeItem === 0 && next === total -1 ) ) {\n        slideDirection = self[direction] = left; // next\n      } else if  ( (activeItem > next) || (activeItem === total - 1 && next === 0 ) ) {\n        slideDirection = self[direction] = right; // prev\n      }\n  \n      // find the right next index \n      if ( next < 0 ) { next = total - 1; } \n      else if ( next >= total ){ next = 0; }\n  \n      // update index\n      index = next;\n  \n      orientation = slideDirection === left ? 'next' : 'prev'; //determine type\n      bootstrapCustomEvent.call(element, slideEvent, component, slides[next]); // here we go with the slide\n  \n      isSliding = true;\n      clearInterval(timer);\n      timer = null;\n      setActivePage( next );\n  \n      if ( supportTransitions && hasClass(element,'slide') ) {\n  \n        addClass(slides[next],carouselItem +'-'+ orientation);\n        slides[next][offsetWidth];\n        addClass(slides[next],carouselItem +'-'+ slideDirection);\n        addClass(slides[activeItem],carouselItem +'-'+ slideDirection);\n  \n        emulateTransitionEnd(slides[next], function(e) {\n          var timeout = e && e[target] !== slides[next] ? e.elapsedTime*1000+100 : 20;\n          \n          isSliding && setTimeout(function(){\n            isSliding = false;\n  \n            addClass(slides[next],active);\n            removeClass(slides[activeItem],active);\n  \n            removeClass(slides[next],carouselItem +'-'+ orientation);\n            removeClass(slides[next],carouselItem +'-'+ slideDirection);\n            removeClass(slides[activeItem],carouselItem +'-'+ slideDirection);\n  \n            bootstrapCustomEvent.call(element, slidEvent, component, slides[next]);\n  \n            if ( !DOC.hidden && self[interval] && !hasClass(element,paused) ) {\n              self.cycle();\n            }\n          }, timeout);\n        });\n  \n      } else {\n        addClass(slides[next],active);\n        slides[next][offsetWidth];\n        removeClass(slides[activeItem],active);\n        setTimeout(function() {\n          isSliding = false;\n          if ( self[interval] && !hasClass(element,paused) ) {\n            self.cycle();\n          }\n          bootstrapCustomEvent.call(element, slidEvent, component, slides[next]);\n        }, 100 );\n      }\n    };\n    this.getActiveIndex = function () {\n      return slides[indexOf](getElementsByClassName(element,carouselItem+' active')[0]) || 0;\n    };\n  \n    // init\n    if ( !(stringCarousel in element ) ) { // prevent adding event handlers twice\n  \n      if ( self[pause] && self[interval] ) {\n        on( element, mouseHover[0], pauseHandler );\n        on( element, mouseHover[1], resumeHandler );\n        on( element, touchEvents.start, pauseHandler, passiveHandler );\n        on( element, touchEvents.end, resumeHandler, passiveHandler );\n      }\n    \n      slides[length] > 1 && on( element, touchEvents.start, touchDownHandler, passiveHandler );\n  \n      rightArrow && on( rightArrow, clickEvent, controlsHandler );\n      leftArrow && on( leftArrow, clickEvent, controlsHandler );\n    \n      indicator && on( indicator, clickEvent, indicatorHandler );\n      self[keyboard] && on( globalObject, keydownEvent, keyHandler );\n  \n    }\n    if (self.getActiveIndex()<0) {\n      slides[length] && addClass(slides[0],active);\n      indicators[length] && setActivePage(0);\n    }\n  \n    if ( self[interval] ){ self.cycle(); }\n    element[stringCarousel] = self;\n  };\n  \n  // CAROUSEL DATA API\n  // =================\n  supports[push]( [ stringCarousel, Carousel, '['+dataRide+'=\"carousel\"]' ] );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Collapse\n  -----------------------------------------------*/\n  \n  // COLLAPSE DEFINITION\n  // ===================\n  var Collapse = function( element, options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // set options\n    options = options || {};\n  \n    // event targets and constants\n    var accordion = null, collapse = null, self = this, \n      accordionData = element[getAttribute]('data-parent'),\n      activeCollapse, activeElement,\n  \n      // component strings\n      component = 'collapse',\n      collapsed = 'collapsed',\n      isAnimating = 'isAnimating',\n  \n      // private methods\n      openAction = function(collapseElement,toggle) {\n        bootstrapCustomEvent.call(collapseElement, showEvent, component);\n        collapseElement[isAnimating] = true;\n        addClass(collapseElement,collapsing);\n        removeClass(collapseElement,component);\n        collapseElement[style][height] = collapseElement[scrollHeight] + 'px';\n        \n        emulateTransitionEnd(collapseElement, function() {\n          collapseElement[isAnimating] = false;\n          collapseElement[setAttribute](ariaExpanded,'true');\n          toggle[setAttribute](ariaExpanded,'true');\n          removeClass(collapseElement,collapsing);\n          addClass(collapseElement, component);\n          addClass(collapseElement,showClass);\n          collapseElement[style][height] = '';\n          bootstrapCustomEvent.call(collapseElement, shownEvent, component);\n        });\n      },\n      closeAction = function(collapseElement,toggle) {\n        bootstrapCustomEvent.call(collapseElement, hideEvent, component);\n        collapseElement[isAnimating] = true;\n        collapseElement[style][height] = collapseElement[scrollHeight] + 'px'; // set height first\n        removeClass(collapseElement,component);\n        removeClass(collapseElement,showClass);\n        addClass(collapseElement,collapsing);\n        collapseElement[offsetWidth]; // force reflow to enable transition\n        collapseElement[style][height] = '0px';\n        \n        emulateTransitionEnd(collapseElement, function() {\n          collapseElement[isAnimating] = false;\n          collapseElement[setAttribute](ariaExpanded,'false');\n          toggle[setAttribute](ariaExpanded,'false');\n          removeClass(collapseElement,collapsing);\n          addClass(collapseElement,component);\n          collapseElement[style][height] = '';\n          bootstrapCustomEvent.call(collapseElement, hiddenEvent, component);\n        });\n      },\n      getTarget = function() {\n        var href = element.href && element[getAttribute]('href'),\n          parent = element[getAttribute](dataTarget),\n          id = href || ( parent && parent.charAt(0) === '#' ) && parent;\n        return id && queryElement(id);\n      };\n    \n    // public methods\n    this.toggle = function(e) {\n      e[preventDefault]();\n      if (!hasClass(collapse,showClass)) { self.show(); } \n      else { self.hide(); }\n    };\n    this.hide = function() {\n      if ( collapse[isAnimating] ) return;    \n      closeAction(collapse,element);\n      addClass(element,collapsed);\n    };\n    this.show = function() {\n      if ( accordion ) {\n        activeCollapse = queryElement('.'+component+'.'+showClass,accordion);\n        activeElement = activeCollapse && (queryElement('['+dataTarget+'=\"#'+activeCollapse.id+'\"]',accordion)\n                      || queryElement('[href=\"#'+activeCollapse.id+'\"]',accordion) );\n      }\n  \n      if ( !collapse[isAnimating] || activeCollapse && !activeCollapse[isAnimating] ) {\n        if ( activeElement && activeCollapse !== collapse ) {\n          closeAction(activeCollapse,activeElement); \n          addClass(activeElement,collapsed);\n        }\n        openAction(collapse,element);\n        removeClass(element,collapsed);\n      }\n    };\n  \n    // init\n    if ( !(stringCollapse in element ) ) { // prevent adding event handlers twice\n      on(element, clickEvent, self.toggle);\n    }\n    collapse = getTarget();\n    collapse[isAnimating] = false;  // when true it will prevent click handlers  \n    accordion = queryElement(options.parent) || accordionData && getClosest(element, accordionData);\n    element[stringCollapse] = self;\n  };\n  \n  // COLLAPSE DATA API\n  // =================\n  supports[push]( [ stringCollapse, Collapse, '['+dataToggle+'=\"collapse\"]' ] );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Dropdown\n  ----------------------------------------------*/\n  \n  // DROPDOWN DEFINITION\n  // ===================\n  var Dropdown = function( element, option ) {\n      \n    // initialization element\n    element = queryElement(element);\n  \n    // set option\n    this.persist = option === true || element[getAttribute]('data-persist') === 'true' || false;\n  \n    // constants, event targets, strings\n    var self = this, children = 'children',\n      parent = element[parentNode],\n      component = 'dropdown', open = 'open',\n      relatedTarget = null,\n      menu = queryElement('.dropdown-menu', parent),\n      menuItems = (function(){\n        var set = menu[children], newSet = [];\n        for ( var i=0; i<set[length]; i++ ){\n          set[i][children][length] && (set[i][children][0].tagName === 'A' && newSet[push](set[i][children][0]));\n          set[i].tagName === 'A' && newSet[push](set[i]);\n        }\n        return newSet;\n      })(),\n  \n      // preventDefault on empty anchor links\n      preventEmptyAnchor = function(anchor){\n        (anchor.href && anchor.href.slice(-1) === '#' || anchor[parentNode] && anchor[parentNode].href \n          && anchor[parentNode].href.slice(-1) === '#') && this[preventDefault]();    \n      },\n  \n      // toggle dismissible events\n      toggleDismiss = function(){\n        var type = element[open] ? on : off;\n        type(DOC, clickEvent, dismissHandler); \n        type(DOC, keydownEvent, preventScroll);\n        type(DOC, keyupEvent, keyHandler);\n        type(DOC, focusEvent, dismissHandler, true);\n      },\n  \n      // handlers\n      dismissHandler = function(e) {\n        var eventTarget = e[target], hasData = eventTarget && (eventTarget[getAttribute](dataToggle) \n                              || eventTarget[parentNode] && getAttribute in eventTarget[parentNode] \n                              && eventTarget[parentNode][getAttribute](dataToggle));\n        if ( e.type === focusEvent && (eventTarget === element || eventTarget === menu || menu[contains](eventTarget) ) ) {\n          return;\n        }\n        if ( (eventTarget === menu || menu[contains](eventTarget)) && (self.persist || hasData) ) { return; }\n        else {\n          relatedTarget = eventTarget === element || element[contains](eventTarget) ? element : null;\n          hide();\n        }\n        preventEmptyAnchor.call(e,eventTarget);\n      },\n      clickHandler = function(e) {\n        relatedTarget = element;\n        show();\n        preventEmptyAnchor.call(e,e[target]);\n      },\n      preventScroll = function(e){\n        var key = e.which || e.keyCode;\n        if( key === 38 || key === 40 ) { e[preventDefault](); }\n      },\n      keyHandler = function(e){\n        var key = e.which || e.keyCode,\n          activeItem = DOC.activeElement,\n          idx = menuItems[indexOf](activeItem),\n          isSameElement = activeItem === element,\n          isInsideMenu = menu[contains](activeItem),\n          isMenuItem = activeItem[parentNode] === menu || activeItem[parentNode][parentNode] === menu;          \n  \n        if ( isMenuItem ) { // navigate up | down\n          idx = isSameElement ? 0 \n                              : key === 38 ? (idx>1?idx-1:0)\n                              : key === 40 ? (idx<menuItems[length]-1?idx+1:idx) : idx;\n          menuItems[idx] && setFocus(menuItems[idx]);\n        }\n        if ( (menuItems[length] && isMenuItem // menu has items\n              || !menuItems[length] && (isInsideMenu || isSameElement)  // menu might be a form\n              || !isInsideMenu ) // or the focused element is not in the menu at all\n              && element[open] && key === 27  // menu must be open\n        ) {\n          self.toggle();\n          relatedTarget = null;\n        }\n      },\n  \n      // private methods\n      show = function() {\n        bootstrapCustomEvent.call(parent, showEvent, component, relatedTarget);\n        addClass(menu,showClass);\n        addClass(parent,showClass);\n        element[setAttribute](ariaExpanded,true);\n        bootstrapCustomEvent.call(parent, shownEvent, component, relatedTarget);\n        element[open] = true;\n        off(element, clickEvent, clickHandler);\n        setTimeout(function(){\n          setFocus( menu[getElementsByTagName]('INPUT')[0] || element ); // focus the first input item | element\n          toggleDismiss();\n        },1);\n      },\n      hide = function() {\n        bootstrapCustomEvent.call(parent, hideEvent, component, relatedTarget);\n        removeClass(menu,showClass);\n        removeClass(parent,showClass);\n        element[setAttribute](ariaExpanded,false);\n        bootstrapCustomEvent.call(parent, hiddenEvent, component, relatedTarget);\n        element[open] = false;\n        toggleDismiss();\n        setFocus(element);\n        setTimeout(function(){ on(element, clickEvent, clickHandler); },1);\n      };\n  \n    // set initial state to closed\n    element[open] = false;\n  \n    // public methods\n    this.toggle = function() {\n      if (hasClass(parent,showClass) && element[open]) { hide(); } \n      else { show(); }\n    };\n  \n    // init\n    if ( !(stringDropdown in element) ) { // prevent adding event handlers twice\n      !tabindex in menu && menu[setAttribute](tabindex, '0'); // Fix onblur on Chrome | Safari\n      on(element, clickEvent, clickHandler);\n    }\n  \n    element[stringDropdown] = self;\n  };\n  \n  // DROPDOWN DATA API\n  // =================\n  supports[push]( [stringDropdown, Dropdown, '['+dataToggle+'=\"dropdown\"]'] );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Modal\n  -------------------------------------------*/\n  \n  // MODAL DEFINITION\n  // ===============\n  var Modal = function(element, options) { // element can be the modal/triggering button\n  \n    // the modal (both JavaScript / DATA API init) / triggering button element (DATA API)\n    element = queryElement(element);\n  \n      // strings\n      var component = 'modal',\n        staticString = 'static',\n        modalTrigger = 'modalTrigger',\n        paddingRight = 'paddingRight',\n        modalBackdropString = 'modal-backdrop',\n        isAnimating = 'isAnimating',\n        // determine modal, triggering element\n        btnCheck = element[getAttribute](dataTarget)||element[getAttribute]('href'),\n        checkModal = queryElement( btnCheck ),\n        modal = hasClass(element,component) ? element : checkModal;\n  \n      if ( hasClass(element, component) ) { element = null; } // modal is now independent of it's triggering element\n  \n    if ( !modal ) { return; } // invalidate\n  \n    // set options\n    options = options || {};\n  \n    this[keyboard] = options[keyboard] === false || modal[getAttribute](dataKeyboard) === 'false' ? false : true;\n    this[backdrop] = options[backdrop] === staticString || modal[getAttribute](databackdrop) === staticString ? staticString : true;\n    this[backdrop] = options[backdrop] === false || modal[getAttribute](databackdrop) === 'false' ? false : this[backdrop];\n    this[animation] = hasClass(modal, 'fade') ? true : false;\n    this[content]  = options[content]; // JavaScript only\n  \n    // set an initial state of the modal\n    modal[isAnimating] = false;\n    \n    // bind, constants, event targets and other vars\n    var self = this, relatedTarget = null,\n      bodyIsOverflowing, scrollBarWidth, overlay, overlayDelay, modalTimer,\n  \n      // also find fixed-top / fixed-bottom items\n      fixedItems = getElementsByClassName(HTML,fixedTop).concat(getElementsByClassName(HTML,fixedBottom)),\n  \n      // private methods\n      getWindowWidth = function() {\n        var htmlRect = HTML[getBoundingClientRect]();\n        return globalObject[innerWidth] || (htmlRect[right] - Math.abs(htmlRect[left]));\n      },\n      setScrollbar = function () {\n        var bodyStyle = globalObject[getComputedStyle](DOC[body]),\n            bodyPad = parseInt((bodyStyle[paddingRight]), 10), itemPad;\n        if (bodyIsOverflowing) {\n          DOC[body][style][paddingRight] = (bodyPad + scrollBarWidth) + 'px';\n          modal[style][paddingRight] = scrollBarWidth+'px';\n          if (fixedItems[length]){\n            for (var i = 0; i < fixedItems[length]; i++) {\n              itemPad = globalObject[getComputedStyle](fixedItems[i])[paddingRight];\n              fixedItems[i][style][paddingRight] = ( parseInt(itemPad) + scrollBarWidth) + 'px';\n            }\n          }\n        }\n      },\n      resetScrollbar = function () {\n        DOC[body][style][paddingRight] = '';\n        modal[style][paddingRight] = '';\n        if (fixedItems[length]){\n          for (var i = 0; i < fixedItems[length]; i++) {\n            fixedItems[i][style][paddingRight] = '';\n          }\n        }\n      },\n      measureScrollbar = function () { // thx walsh\n        var scrollDiv = DOC[createElement]('div'), widthValue;\n        scrollDiv.className = component+'-scrollbar-measure'; // this is here to stay\n        DOC[body][appendChild](scrollDiv);\n        widthValue = scrollDiv[offsetWidth] - scrollDiv[clientWidth];\n        DOC[body].removeChild(scrollDiv);\n        return widthValue;\n      },\n      checkScrollbar = function () {\n        bodyIsOverflowing = DOC[body][clientWidth] < getWindowWidth();\n        scrollBarWidth = measureScrollbar();\n      },\n      createOverlay = function() {\n        var newOverlay = DOC[createElement]('div');\n        overlay = queryElement('.'+modalBackdropString);\n  \n        if ( overlay === null ) {\n          newOverlay[setAttribute]('class', modalBackdropString + (self[animation] ? ' fade' : ''));\n          overlay = newOverlay;\n          DOC[body][appendChild](overlay);\n        }\n        modalOverlay = 1;\n      },\n      removeOverlay = function() {\n        overlay = queryElement('.'+modalBackdropString);\n        if ( overlay && overlay !== null && typeof overlay === 'object' ) {\n          modalOverlay = 0;\n          DOC[body].removeChild(overlay); overlay = null;\n        }\n      },\n      // triggers\n      triggerShow = function() {\n        setFocus(modal);\n        modal[isAnimating] = false;\n        bootstrapCustomEvent.call(modal, shownEvent, component, relatedTarget);\n  \n        on(globalObject, resizeEvent, self.update, passiveHandler);\n        on(modal, clickEvent, dismissHandler);\n        on(DOC, keydownEvent, keyHandler);      \n      },\n      triggerHide = function() {\n        modal[style].display = '';\n        element && (setFocus(element));\n        bootstrapCustomEvent.call(modal, hiddenEvent, component);\n  \n        (function(){\n          if (!getElementsByClassName(DOC,component+' '+showClass)[0]) {\n            resetScrollbar();\n            removeClass(DOC[body],component+'-open');\n            overlay && hasClass(overlay,'fade') ? (removeClass(overlay,showClass), emulateTransitionEnd(overlay,removeOverlay))\n            : removeOverlay();\n  \n            off(globalObject, resizeEvent, self.update, passiveHandler);\n            off(modal, clickEvent, dismissHandler);\n            off(DOC, keydownEvent, keyHandler);\n          }\n        }());\n        modal[isAnimating] = false;\n      },\n      // handlers\n      clickHandler = function(e) {\n        if ( modal[isAnimating] ) return;\n  \n        var clickTarget = e[target];\n        clickTarget = clickTarget[hasAttribute](dataTarget) || clickTarget[hasAttribute]('href') ? clickTarget : clickTarget[parentNode];\n        if ( clickTarget === element && !hasClass(modal,showClass) ) {\n          modal[modalTrigger] = element;\n          relatedTarget = element;\n          self.show();\n          e[preventDefault]();\n        }\n      },\n      keyHandler = function(e) {\n        if ( modal[isAnimating] ) return;\n  \n        if (self[keyboard] && e.which == 27 && hasClass(modal,showClass) ) {\n          self.hide();\n        }\n      },\n      dismissHandler = function(e) {\n        if ( modal[isAnimating] ) return;\n        var clickTarget = e[target];\n  \n        if ( hasClass(modal,showClass) && ( clickTarget[parentNode][getAttribute](dataDismiss) === component\n            || clickTarget[getAttribute](dataDismiss) === component\n            || clickTarget === modal && self[backdrop] !== staticString ) ) {\n          self.hide(); relatedTarget = null;\n          e[preventDefault]();\n        }\n      };\n  \n    // public methods\n    this.toggle = function() {\n      if ( hasClass(modal,showClass) ) {this.hide();} else {this.show();}\n    };\n    this.show = function() {\n      if ( hasClass(modal,showClass) || modal[isAnimating] ) {return}\n  \n      clearTimeout(modalTimer);\n      modalTimer = setTimeout(function(){\n        modal[isAnimating] = true;\n        bootstrapCustomEvent.call(modal, showEvent, component, relatedTarget);\n  \n        // we elegantly hide any opened modal\n        var currentOpen = getElementsByClassName(DOC,component+' '+showClass)[0];\n        if (currentOpen && currentOpen !== modal) {\n          modalTrigger in currentOpen && currentOpen[modalTrigger][stringModal].hide();\n          stringModal in currentOpen && currentOpen[stringModal].hide();\n        }\n  \n        if ( self[backdrop] ) {\n          !modalOverlay && !overlay && createOverlay();\n        }\n  \n        if ( overlay && !hasClass(overlay,showClass) ) {\n          overlay[offsetWidth]; // force reflow to enable trasition\n          overlayDelay = getTransitionDurationFromElement(overlay);\n          addClass(overlay, showClass);\n        }\n  \n        setTimeout( function() {\n          modal[style].display = 'block';\n  \n          checkScrollbar();\n          setScrollbar();\n  \n          addClass(DOC[body],component+'-open');\n          addClass(modal,showClass);\n          modal[setAttribute](ariaHidden, false);\n  \n          hasClass(modal,'fade') ? emulateTransitionEnd(modal, triggerShow) : triggerShow();\n        }, supportTransitions && overlay && overlayDelay ? overlayDelay : 1);\n      },1);\n    };\n    this.hide = function() {\n      if ( modal[isAnimating] || !hasClass(modal,showClass) ) {return}\n  \n      clearTimeout(modalTimer);\n      modalTimer = setTimeout(function(){\n        modal[isAnimating] = true;    \n        bootstrapCustomEvent.call(modal, hideEvent, component);\n        overlay = queryElement('.'+modalBackdropString);\n        overlayDelay = overlay && getTransitionDurationFromElement(overlay);\n  \n        removeClass(modal,showClass);\n        modal[setAttribute](ariaHidden, true);\n  \n        setTimeout(function(){\n          hasClass(modal,'fade') ? emulateTransitionEnd(modal, triggerHide) : triggerHide();\n        }, supportTransitions && overlay && overlayDelay ? overlayDelay : 2);\n      },2)\n    };\n    this.setContent = function( content ) {\n      queryElement('.'+component+'-content',modal)[innerHTML] = content;\n    };\n    this.update = function() {\n      if (hasClass(modal,showClass)) {\n        checkScrollbar();\n        setScrollbar();\n      }\n    };\n  \n    // init\n    // prevent adding event handlers over and over\n    // modal is independent of a triggering element\n    if ( !!element && !(stringModal in element) ) {\n      on(element, clickEvent, clickHandler);\n    }\n    if ( !!self[content] ) { self.setContent( self[content] ); }\n    if (element) { element[stringModal] = self; modal[modalTrigger] = element; }\n    else { modal[stringModal] = self; }\n  };\n  \n  // DATA API\n  supports[push]( [ stringModal, Modal, '['+dataToggle+'=\"modal\"]' ] );\n  \n  /* Native Javascript for Bootstrap 4 | Popover\n  ----------------------------------------------*/\n  \n  // POPOVER DEFINITION\n  // ==================\n  var Popover = function( element, options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // set options\n    options = options || {};\n  \n    // DATA API\n    var triggerData = element[getAttribute](dataTrigger), // click / hover / focus\n        animationData = element[getAttribute](dataAnimation), // true / false\n        placementData = element[getAttribute](dataPlacement),\n        dismissibleData = element[getAttribute](dataDismissible),\n        delayData = element[getAttribute](dataDelay),\n        containerData = element[getAttribute](dataContainer),\n  \n        // internal strings\n        component = 'popover',\n        template = 'template',\n        trigger = 'trigger',\n        classString = 'class',\n        div = 'div',\n        fade = 'fade',\n        dataContent = 'data-content',\n        dismissible = 'dismissible',\n        closeBtn = '<button type=\"button\" class=\"close\">Ã</button>',\n  \n        // check container\n        containerElement = queryElement(options[container]),\n        containerDataElement = queryElement(containerData),       \n        \n        // maybe the element is inside a modal\n        modal = getClosest(element,'.modal'),\n        \n        // maybe the element is inside a fixed navbar\n        navbarFixedTop = getClosest(element,'.'+fixedTop),\n        navbarFixedBottom = getClosest(element,'.'+fixedBottom);\n  \n    // set instance options\n    this[template] = options[template] ? options[template] : null; // JavaScript only\n    this[trigger] = options[trigger] ? options[trigger] : triggerData || hoverEvent;\n    this[animation] = options[animation] && options[animation] !== fade ? options[animation] : animationData || fade;\n    this[placement] = options[placement] ? options[placement] : placementData || top;\n    this[delay] = parseInt(options[delay] || delayData) || 200;\n    this[dismissible] = options[dismissible] || dismissibleData === 'true' ? true : false;\n    this[container] = containerElement ? containerElement \n                    : containerDataElement ? containerDataElement \n                    : navbarFixedTop ? navbarFixedTop\n                    : navbarFixedBottom ? navbarFixedBottom\n                    : modal ? modal : DOC[body];\n    \n    // bind, content\n    var self = this, \n        titleString = options.title || element[getAttribute](dataTitle) || null,\n        contentString = options.content || element[getAttribute](dataContent) || null;\n  \n    if ( !contentString && !this[template] ) return; // invalidate\n  \n    // constants, vars\n    var popover = null, timer = 0, placementSetting = this[placement],\n      \n      // handlers\n      dismissibleHandler = function(e) {\n        if (popover !== null && e[target] === queryElement('.close',popover)) {\n          self.hide();\n        }\n      },\n  \n      // private methods\n      removePopover = function() {\n        self[container].removeChild(popover);\n        timer = null; popover = null; \n      },\n      createPopover = function() {\n        titleString = options.title || element[getAttribute](dataTitle);\n        contentString = options.content || element[getAttribute](dataContent);\n        // fixing https://github.com/thednp/bootstrap.native/issues/233\n        contentString = !!contentString ? contentString.trim() : null;\n  \n        popover = DOC[createElement](div);\n  \n        // popover arrow\n        var popoverArrow = DOC[createElement](div);\n        popoverArrow[setAttribute](classString,'arrow');\n        popover[appendChild](popoverArrow);\n  \n        if ( contentString !== null && self[template] === null ) { //create the popover from data attributes\n  \n          popover[setAttribute]('role','tooltip');     \n  \n          if (titleString !== null) {\n            var popoverTitle = DOC[createElement]('h3');\n            popoverTitle[setAttribute](classString,component+'-header');\n  \n            popoverTitle[innerHTML] = self[dismissible] ? titleString + closeBtn : titleString;\n            popover[appendChild](popoverTitle);\n          }\n  \n          //set popover content\n          var popoverContent = DOC[createElement](div);\n          popoverContent[setAttribute](classString,component+'-body');\n          popoverContent[innerHTML] = self[dismissible] && titleString === null ? contentString + closeBtn : contentString;\n          popover[appendChild](popoverContent);\n  \n        } else {  // or create the popover from template\n          var popoverTemplate = DOC[createElement](div);\n          self[template] = self[template].trim();\n          popoverTemplate[innerHTML] = self[template];\n          popover[innerHTML] = popoverTemplate.firstChild[innerHTML];\n        }\n  \n        //append to the container\n        self[container][appendChild](popover);\n        popover[style].display = 'block';\n        popover[setAttribute](classString, component+ ' bs-' + component+'-'+placementSetting + ' ' + self[animation]);\n      },\n      showPopover = function () {\n        !hasClass(popover,showClass) && ( addClass(popover,showClass) );\n      },\n      updatePopover = function() {\n        styleTip(element, popover, placementSetting, self[container]);\n      },\n  \n      // event toggle\n      dismissHandlerToggle = function(type){\n        if (clickEvent == self[trigger] || 'focus' == self[trigger]) {\n          !self[dismissible] && type( element, 'blur', self.hide );\n        }\n        self[dismissible] && type( DOC, clickEvent, dismissibleHandler );     \n        type( globalObject, resizeEvent, self.hide, passiveHandler );\n      },\n  \n      // triggers\n      showTrigger = function() {\n        dismissHandlerToggle(on);\n        bootstrapCustomEvent.call(element, shownEvent, component);\n      },\n      hideTrigger = function() {\n        dismissHandlerToggle(off);\n        removePopover();\n        bootstrapCustomEvent.call(element, hiddenEvent, component);\n      };\n  \n    // public methods / handlers\n    this.toggle = function() {\n      if (popover === null) { self.show(); } \n      else { self.hide(); }\n    };\n    this.show = function() {\n      clearTimeout(timer);\n      timer = setTimeout( function() {\n        if (popover === null) {\n          placementSetting = self[placement]; // we reset placement in all cases\n          createPopover();\n          updatePopover();\n          showPopover();\n          bootstrapCustomEvent.call(element, showEvent, component);\n          !!self[animation] ? emulateTransitionEnd(popover, showTrigger) : showTrigger();\n        }\n      }, 20 );\n    };\n    this.hide = function() {\n      clearTimeout(timer);\n      timer = setTimeout( function() {\n        if (popover && popover !== null && hasClass(popover,showClass)) {\n          bootstrapCustomEvent.call(element, hideEvent, component);\n          removeClass(popover,showClass);\n          !!self[animation] ? emulateTransitionEnd(popover, hideTrigger) : hideTrigger();\n        }\n      }, self[delay] );\n    };\n  \n    // init\n    if ( !(stringPopover in element) ) { // prevent adding event handlers twice\n      if (self[trigger] === hoverEvent) {\n        on( element, mouseHover[0], self.show );\n        if (!self[dismissible]) { on( element, mouseHover[1], self.hide ); }\n      } else if (clickEvent == self[trigger] || 'focus' == self[trigger]) {\n        on( element, self[trigger], self.toggle );\n      }\n    }\n    element[stringPopover] = self;\n  };\n  \n  // POPOVER DATA API\n  // ================\n  supports[push]( [ stringPopover, Popover, '['+dataToggle+'=\"popover\"]' ] );\n  \n  \n  /* Native Javascript for Bootstrap 4 | ScrollSpy\n  -----------------------------------------------*/\n  \n  // SCROLLSPY DEFINITION\n  // ====================\n  var ScrollSpy = function(element, options) {\n  \n    // initialization element, the element we spy on\n    element = queryElement(element); \n  \n    // DATA API\n    var targetData = queryElement(element[getAttribute](dataTarget)),\n        offsetData = element[getAttribute]('data-offset');\n  \n    // set options\n    options = options || {};\n  \n    // invalidate\n    if ( !options[target] && !targetData ) { return; } \n  \n    // event targets, constants\n    var self = this, spyTarget = options[target] && queryElement(options[target]) || targetData,\n        links = spyTarget && spyTarget[getElementsByTagName]('A'),\n        offset = parseInt(options['offset'] || offsetData) || 10,      \n        items = [], targetItems = [], scrollOffset,\n        scrollTarget = element[offsetHeight] < element[scrollHeight] ? element : globalObject, // determine which is the real scrollTarget\n        isWindow = scrollTarget === globalObject;  \n  \n    // populate items and targets\n    for (var i=0, il=links[length]; i<il; i++) {\n      var href = links[i][getAttribute]('href'), \n          targetItem = href && href.charAt(0) === '#' && href.slice(-1) !== '#' && queryElement(href);\n      if ( !!targetItem ) {\n        items[push](links[i]);\n        targetItems[push](targetItem);\n      }\n    }\n  \n    // private methods\n    var updateItem = function(index) {\n        var item = items[index],\n          targetItem = targetItems[index], // the menu item targets this element\n          dropdown = item[parentNode][parentNode],\n          dropdownLink = hasClass(dropdown,'dropdown') && dropdown[getElementsByTagName]('A')[0],\n          targetRect = isWindow && targetItem[getBoundingClientRect](),\n  \n          isActive = hasClass(item,active) || false,\n  \n          topEdge = (isWindow ? targetRect[top] + scrollOffset : targetItem[offsetTop]) - offset,\n          bottomEdge = isWindow ? targetRect[bottom] + scrollOffset - offset : targetItems[index+1] ? targetItems[index+1][offsetTop] - offset : element[scrollHeight],\n  \n          inside = scrollOffset >= topEdge && bottomEdge > scrollOffset;\n  \n        if ( !isActive && inside ) {\n          if ( !hasClass(item,active) ) {\n            addClass(item,active);\n            if (dropdownLink && !hasClass(dropdownLink,active) ) {\n              addClass(dropdownLink,active);\n            }\n            bootstrapCustomEvent.call(element, 'activate', 'scrollspy', items[index]);\n          }\n        } else if ( !inside ) {\n          if ( hasClass(item,active) ) {\n            removeClass(item,active);\n            if (dropdownLink && hasClass(dropdownLink,active) && !getElementsByClassName(item[parentNode],active).length  ) {\n              removeClass(dropdownLink,active);\n            }\n          }\n        } else if ( !inside && !isActive || isActive && inside ) {\n          return;\n        }\n      },\n      updateItems = function(){\n        scrollOffset = isWindow ? getScroll().y : element[scrollTop];\n        for (var index=0, itl=items[length]; index<itl; index++) {\n          updateItem(index)\n        }\n      };\n  \n    // public method\n    this.refresh = function () {\n      updateItems();\n    }\n  \n    // init\n    if ( !(stringScrollSpy in element) ) { // prevent adding event handlers twice\n      on( scrollTarget, scrollEvent, self.refresh, passiveHandler );\n      on( globalObject, resizeEvent, self.refresh, passiveHandler );\n    }\n    self.refresh();\n    element[stringScrollSpy] = self;\n  };\n  \n  // SCROLLSPY DATA API\n  // ==================\n  supports[push]( [ stringScrollSpy, ScrollSpy, '['+dataSpy+'=\"scroll\"]' ] );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Tab\n  -----------------------------------------*/\n  \n  // TAB DEFINITION\n  // ==============\n  var Tab = function( element, options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // DATA API\n    var heightData = element[getAttribute](dataHeight),\n      \n        // strings\n        component = 'tab', height = 'height', float = 'float', isAnimating = 'isAnimating';\n        \n    // set options\n    options = options || {};\n    this[height] = supportTransitions ? (options[height] || heightData === 'true') : false;\n  \n    // bind, event targets\n    var self = this, next,\n      tabs = getClosest(element,'.nav'),\n      tabsContentContainer = false,\n      dropdown = tabs && queryElement('.dropdown-toggle',tabs),\n      activeTab, activeContent, nextContent, containerHeight, equalContents, nextHeight,\n      \n      // trigger\n      triggerEnd = function(){\n        tabsContentContainer[style][height] = '';\n        removeClass(tabsContentContainer,collapsing);\n        tabs[isAnimating] = false;\n      },\n      triggerShow = function() {\n        if (tabsContentContainer) { // height animation\n          if ( equalContents ) {\n            triggerEnd();\n          } else {\n            setTimeout(function(){ // enables height animation\n              tabsContentContainer[style][height] = nextHeight + 'px'; // height animation\n              tabsContentContainer[offsetWidth];\n              emulateTransitionEnd(tabsContentContainer, triggerEnd);\n            },50);\n          }\n        } else {\n          tabs[isAnimating] = false; \n        }\n        bootstrapCustomEvent.call(next, shownEvent, component, activeTab);\n      },\n      triggerHide = function() {\n        if (tabsContentContainer) {\n          activeContent[style][float] = left;\n          nextContent[style][float] = left;        \n          containerHeight = activeContent[scrollHeight];\n        }\n          \n        addClass(nextContent,active);\n        bootstrapCustomEvent.call(next, showEvent, component, activeTab);\n  \n        removeClass(activeContent,active);\n        bootstrapCustomEvent.call(activeTab, hiddenEvent, component, next);\n        \n        if (tabsContentContainer) {\n          nextHeight = nextContent[scrollHeight];\n          equalContents = nextHeight === containerHeight;\n          addClass(tabsContentContainer,collapsing);\n          tabsContentContainer[style][height] = containerHeight + 'px'; // height animation\n          tabsContentContainer[offsetHeight];\n          activeContent[style][float] = '';\n          nextContent[style][float] = '';\n        }\n  \n        if ( hasClass(nextContent, 'fade') ) {\n          setTimeout(function(){\n            addClass(nextContent,showClass);\n            emulateTransitionEnd(nextContent,triggerShow);\n          },20);\n        } else { triggerShow(); }        \n      };\n  \n    if (!tabs) return; // invalidate\n  \n    // set default animation state\n    tabs[isAnimating] = false;    \n          \n    // private methods\n    var getActiveTab = function() {\n        var activeTabs = getElementsByClassName(tabs,active), activeTab;\n        if ( activeTabs[length] === 1 && !hasClass(activeTabs[0][parentNode],'dropdown') ) {\n          activeTab = activeTabs[0];\n        } else if ( activeTabs[length] > 1 ) {\n          activeTab = activeTabs[activeTabs[length]-1];\n        }\n        return activeTab;\n      },\n      getActiveContent = function() {\n        return queryElement(getActiveTab()[getAttribute]('href'));\n      },\n      // handler \n      clickHandler = function(e) {\n        e[preventDefault]();\n        next = e[currentTarget];\n        !tabs[isAnimating] && !hasClass(next,active) && self.show();\n      };\n  \n    // public method\n    this.show = function() { // the tab we clicked is now the next tab\n      next = next || element;\n      nextContent = queryElement(next[getAttribute]('href')); //this is the actual object, the next tab content to activate\n      activeTab = getActiveTab(); \n      activeContent = getActiveContent();\n      \n      tabs[isAnimating] = true;\n      removeClass(activeTab,active);\n      activeTab[setAttribute](ariaSelected,'false');\n      addClass(next,active);\n      next[setAttribute](ariaSelected,'true');    \n  \n      if ( dropdown ) {\n        if ( !hasClass(element[parentNode],'dropdown-menu') ) {\n          if (hasClass(dropdown,active)) removeClass(dropdown,active);\n        } else {\n          if (!hasClass(dropdown,active)) addClass(dropdown,active);\n        }\n      }\n      \n      bootstrapCustomEvent.call(activeTab, hideEvent, component, next);\n  \n      if (hasClass(activeContent, 'fade')) {\n        removeClass(activeContent,showClass);\n        emulateTransitionEnd(activeContent, triggerHide);\n      } else { triggerHide(); }\n    };\n  \n    // init\n    if ( !(stringTab in element) ) { // prevent adding event handlers twice\n      on(element, clickEvent, clickHandler);\n    }\n    if (self[height]) { tabsContentContainer = getActiveContent()[parentNode]; }\n    element[stringTab] = self;\n  };\n  \n  // TAB DATA API\n  // ============\n  supports[push]( [ stringTab, Tab, '['+dataToggle+'=\"tab\"]' ] );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Toast\n  ---------------------------------------------*/\n  \n  // TOAST DEFINITION\n  // ==================\n  var Toast = function( element,options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // set options\n    options = options || {};\n  \n    // DATA API\n    var animationData = element[getAttribute](dataAnimation),\n        autohideData = element[getAttribute](dataAutohide),\n        delayData = element[getAttribute](dataDelay),\n        \n        // strings\n        component = 'toast',\n        autohide = 'autohide',\n        animation = 'animation',\n        showing = 'showing',\n        hide = 'hide',\n        fade = 'fade';\n  \n    // set instance options\n    this[animation] = options[animation] === false || animationData === 'false' ? 0 : 1; // true by default\n    this[autohide] = options[autohide] === false || autohideData === 'false' ? 0 : 1; // true by default\n    this[delay] = parseInt(options[delay] || delayData) || 500; // 500ms default\n  \n    // bind,toast and timer\n    var self = this, timer = 0,\n        // get the toast element\n        toast = getClosest(element,'.toast');\n  \n    // private methods\n    // animation complete\n    var showComplete = function() {\n        removeClass( toast, showing );\n        addClass( toast, showClass );\n        bootstrapCustomEvent.call(toast, shownEvent, component);\n        if (self[autohide]) { self.hide(); }\n      },\n      hideComplete = function() {\n        addClass( toast, hide );\n        bootstrapCustomEvent.call(toast, hiddenEvent, component);\n      },\n      close = function() {\n        removeClass( toast,showClass );\n        self[animation] ? emulateTransitionEnd(toast, hideComplete) : hideComplete();\n      },\n      disposeComplete = function(){\n        clearTimeout(timer); timer = null;\n        addClass( toast, hide );\n        off(element, clickEvent, self.hide);\n        element[stringToast] = null;\n        element = null;\n        toast = null;\n      };\n  \n    // public methods\n    this.show = function() {\n      if (toast) {\n        bootstrapCustomEvent.call(toast, showEvent, component);\n        self[animation] && addClass( toast,fade );\n        removeClass( toast,hide );\n        addClass( toast,showing );\n  \n        self[animation] ? emulateTransitionEnd(toast, showComplete) : showComplete();\n      }\n    };\n    this.hide = function(noTimer) {\n      if (toast && hasClass(toast,showClass)) {\n        bootstrapCustomEvent.call(toast, hideEvent, component);\n  \n        if (noTimer) {\n          close();\n        } else {\n          timer = setTimeout( close, self[delay]);\n        }\n      }\n    };\n    this.dispose = function() {\n      if ( toast && hasClass(toast,showClass) ) {\n        removeClass( toast,showClass );\n        self[animation] ? emulateTransitionEnd(toast, disposeComplete) : disposeComplete();\n      }\n    };\n  \n    // init\n    if ( !(stringToast in element) ) { // prevent adding event handlers twice\n      on(element, clickEvent, self.hide);\n    }\n    element[stringToast] = self;\n  };\n  \n  // TOAST DATA API\n  // =================\n  supports[push]( [ stringToast, Toast, '['+dataDismiss+'=\"toast\"]' ] );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Tooltip\n  ---------------------------------------------*/\n  \n  // TOOLTIP DEFINITION\n  // ==================\n  var Tooltip = function( element,options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // set options\n    options = options || {};\n  \n    // DATA API\n    var animationData = element[getAttribute](dataAnimation),\n        placementData = element[getAttribute](dataPlacement),\n        delayData = element[getAttribute](dataDelay),\n        containerData = element[getAttribute](dataContainer),\n        \n        // strings\n        component = 'tooltip',\n        classString = 'class',\n        title = 'title',\n        fade = 'fade',\n        div = 'div',\n  \n        // check container\n        containerElement = queryElement(options[container]),\n        containerDataElement = queryElement(containerData),      \n  \n        // maybe the element is inside a modal\n        modal = getClosest(element,'.modal'),\n        \n        // maybe the element is inside a fixed navbar\n        navbarFixedTop = getClosest(element,'.'+fixedTop),\n        navbarFixedBottom = getClosest(element,'.'+fixedBottom);\n  \n    // set instance options\n    this[animation] = options[animation] && options[animation] !== fade ? options[animation] : animationData || fade;\n    this[placement] = options[placement] ? options[placement] : placementData || top;\n    this[delay] = parseInt(options[delay] || delayData) || 200;\n    this[container] = containerElement ? containerElement \n                    : containerDataElement ? containerDataElement\n                    : navbarFixedTop ? navbarFixedTop\n                    : navbarFixedBottom ? navbarFixedBottom\n                    : modal ? modal : DOC[body];\n  \n    // bind, event targets, title and constants\n    var self = this, timer = 0, placementSetting = this[placement], tooltip = null,\n        titleString = element[getAttribute](title) || element[getAttribute](dataTitle) || element[getAttribute](dataOriginalTitle);\n  \n    if ( !titleString || titleString == \"\" ) return; // invalidate\n  \n    // private methods\n    var removeToolTip = function() {\n        self[container].removeChild(tooltip);\n        tooltip = null; timer = null;\n      },\n      createToolTip = function() {\n        titleString = element[getAttribute](title) || element[getAttribute](dataTitle) || element[getAttribute](dataOriginalTitle); // read the title again\n  \n        if ( titleString && titleString !== \"\" ) { // invalidate, maybe markup changed\n          tooltip = DOC[createElement](div);\n          tooltip[setAttribute]('role',component);\n          tooltip[style][left] = '0';\n          tooltip[style][top] = '0';        \n  \n          // tooltip arrow\n          var tooltipArrow = DOC[createElement](div);\n          tooltipArrow[setAttribute](classString,'arrow');\n          tooltip[appendChild](tooltipArrow);\n      \n          var tooltipInner = DOC[createElement](div);\n          tooltipInner[setAttribute](classString,component+'-inner');\n          tooltip[appendChild](tooltipInner);\n          tooltipInner[innerHTML] = titleString;\n  \n          self[container][appendChild](tooltip);\n          tooltip[setAttribute](classString, component + ' bs-' + component+'-'+placementSetting + ' ' + self[animation]);\n        }\n      },\n      updateTooltip = function () {\n        styleTip(element, tooltip, placementSetting, self[container]);\n      },\n      showTooltip = function () {\n        !hasClass(tooltip,showClass) && ( addClass(tooltip,showClass) );\n      },\n      // triggers\n      showTrigger = function() {\n        on( globalObject, resizeEvent, self.hide, passiveHandler );\n        bootstrapCustomEvent.call(element, shownEvent, component);\n      },\n      hideTrigger = function() {\n        off( globalObject, resizeEvent, self.hide, passiveHandler );\n        removeToolTip();\n        bootstrapCustomEvent.call(element, hiddenEvent, component);\n      };\n  \n    // public methods\n    this.show = function() {\n      clearTimeout(timer);\n      timer = setTimeout( function() {\n        if (tooltip === null) {\n          placementSetting = self[placement]; // we reset placement in all cases\n          // if(createToolTip() == false) return;\n          if(createToolTip() !== false) {\n            updateTooltip();\n            showTooltip();\n            bootstrapCustomEvent.call(element, showEvent, component);\n            !!self[animation] ? emulateTransitionEnd(tooltip, showTrigger) : showTrigger();          \n          }\n        }\n      }, 20 );\n    };\n    this.hide = function() {\n      clearTimeout(timer);\n      timer = setTimeout( function() {\n        if (tooltip && hasClass(tooltip,showClass)) {\n          bootstrapCustomEvent.call(element, hideEvent, component);\n          removeClass(tooltip,showClass);\n          !!self[animation] ? emulateTransitionEnd(tooltip, hideTrigger) : hideTrigger();\n        }\n      }, self[delay]);\n    };\n    this.toggle = function() {\n      if (!tooltip) { self.show(); } \n      else { self.hide(); }\n    };\n  \n    // init\n    if ( !(stringTooltip in element) ) { // prevent adding event handlers twice\n      element[setAttribute](dataOriginalTitle,titleString);\n      element.removeAttribute(title);\n      on(element, mouseHover[0], self.show);\n      on(element, mouseHover[1], self.hide);\n    }\n    element[stringTooltip] = self;\n  };\n  \n  // TOOLTIP DATA API\n  // =================\n  supports[push]( [ stringTooltip, Tooltip, '['+dataToggle+'=\"tooltip\"]' ] );\n  \n  \n  \r\n  /* Native Javascript for Bootstrap | Initialize Data API\r\n  --------------------------------------------------------*/\r\n  var initializeDataAPI = function( constructor, collection ){\r\n      for (var i=0, l=collection[length]; i<l; i++) {\r\n        new constructor(collection[i]);\r\n      }\r\n    },\r\n    initCallback = BSN.initCallback = function(lookUp){\r\n      lookUp = lookUp || DOC;\r\n      for (var i=0, l=supports[length]; i<l; i++) {\r\n        initializeDataAPI( supports[i][1], lookUp[querySelectorAll] (supports[i][2]) );\r\n      }\r\n    };\r\n  \r\n  // bulk initialize all components\r\n  DOC[body] ? initCallback() : on( DOC, 'DOMContentLoaded', function(){ initCallback(); } );\r\n  \n  return {\n    Alert: Alert,\n    Button: Button,\n    Carousel: Carousel,\n    Collapse: Collapse,\n    Dropdown: Dropdown,\n    Modal: Modal,\n    Popover: Popover,\n    ScrollSpy: ScrollSpy,\n    Tab: Tab,\n    Toast: Toast,\n    Tooltip: Tooltip\n  };\n}));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/bootstrap.native/dist/bootstrap-native-v4.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./resources/js/src/app.js":
/*!*********************************!*\
  !*** ./resources/js/src/app.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var bootstrap = __webpack_require__(/*! bootstrap.native/dist/bootstrap-native-v4 */ \"./node_modules/bootstrap.native/dist/bootstrap-native-v4.js\");\n\n(function (window, document) {\n  var messages = Array.prototype.slice.call(document.querySelectorAll('.toast'));\n  messages.forEach(function (message) {\n    new bootstrap.Toast(message, {\n      delay: message.dataset.delay == undefined ? 3000 : message.dataset.delay,\n      autohide: message.dataset.autohide == undefined ? true : Boolean(message.dataset.autohide)\n    }).show();\n  });\n})(window, document);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvc3JjL2FwcC5qcz8wZWE3Il0sIm5hbWVzIjpbImJvb3RzdHJhcCIsInJlcXVpcmUiLCJ3aW5kb3ciLCJkb2N1bWVudCIsIm1lc3NhZ2VzIiwiQXJyYXkiLCJwcm90b3R5cGUiLCJzbGljZSIsImNhbGwiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsIm1lc3NhZ2UiLCJUb2FzdCIsImRlbGF5IiwiZGF0YXNldCIsInVuZGVmaW5lZCIsImF1dG9oaWRlIiwiQm9vbGVhbiIsInNob3ciXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFNBQVMsR0FBR0MsbUJBQU8sQ0FBQyw4R0FBRCxDQUF2Qjs7QUFFQSxDQUFDLFVBQVVDLE1BQVYsRUFBa0JDLFFBQWxCLEVBQTRCO0FBRXpCLE1BQUlDLFFBQVEsR0FBR0MsS0FBSyxDQUFDQyxTQUFOLENBQWdCQyxLQUFoQixDQUFzQkMsSUFBdEIsQ0FDWEwsUUFBUSxDQUFDTSxnQkFBVCxDQUEwQixRQUExQixDQURXLENBQWY7QUFJQUwsVUFBUSxDQUFDTSxPQUFULENBQWlCLFVBQVVDLE9BQVYsRUFBbUI7QUFDaEMsUUFBSVgsU0FBUyxDQUFDWSxLQUFkLENBQW9CRCxPQUFwQixFQUE2QjtBQUN6QkUsV0FBSyxFQUFFRixPQUFPLENBQUNHLE9BQVIsQ0FBZ0JELEtBQWhCLElBQXlCRSxTQUF6QixHQUFxQyxJQUFyQyxHQUE0Q0osT0FBTyxDQUFDRyxPQUFSLENBQWdCRCxLQUQxQztBQUV6QkcsY0FBUSxFQUFFTCxPQUFPLENBQUNHLE9BQVIsQ0FBZ0JFLFFBQWhCLElBQTRCRCxTQUE1QixHQUF3QyxJQUF4QyxHQUErQ0UsT0FBTyxDQUFDTixPQUFPLENBQUNHLE9BQVIsQ0FBZ0JFLFFBQWpCO0FBRnZDLEtBQTdCLEVBR0dFLElBSEg7QUFJSCxHQUxEO0FBT0gsQ0FiRCxFQWFHaEIsTUFiSCxFQWFXQyxRQWJYIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL3NyYy9hcHAuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYm9vdHN0cmFwID0gcmVxdWlyZSgnYm9vdHN0cmFwLm5hdGl2ZS9kaXN0L2Jvb3RzdHJhcC1uYXRpdmUtdjQnKTtcblxuKGZ1bmN0aW9uICh3aW5kb3csIGRvY3VtZW50KSB7XG5cbiAgICBsZXQgbWVzc2FnZXMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRvYXN0JylcbiAgICApO1xuXG4gICAgbWVzc2FnZXMuZm9yRWFjaChmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgICBuZXcgYm9vdHN0cmFwLlRvYXN0KG1lc3NhZ2UsIHtcbiAgICAgICAgICAgIGRlbGF5OiBtZXNzYWdlLmRhdGFzZXQuZGVsYXkgPT0gdW5kZWZpbmVkID8gMzAwMCA6IG1lc3NhZ2UuZGF0YXNldC5kZWxheSxcbiAgICAgICAgICAgIGF1dG9oaWRlOiBtZXNzYWdlLmRhdGFzZXQuYXV0b2hpZGUgPT0gdW5kZWZpbmVkID8gdHJ1ZSA6IEJvb2xlYW4obWVzc2FnZS5kYXRhc2V0LmF1dG9oaWRlKVxuICAgICAgICB9KS5zaG93KCk7XG4gICAgfSk7XG5cbn0pKHdpbmRvdywgZG9jdW1lbnQpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/src/app.js\n");

/***/ }),

/***/ "./resources/js/src/polyfills.js":
/*!***************************************!*\
  !*** ./resources/js/src/polyfills.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Polyfill for matches()\n */\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    var el = this;\n\n    do {\n      if (el.matches(s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n/**\n * Polyfill for closest()\n * - Relies on matches() above.\n */\n\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    var el = this;\n\n    do {\n      if (el.matches(s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvc3JjL3BvbHlmaWxscy5qcz9kZWNmIl0sIm5hbWVzIjpbIkVsZW1lbnQiLCJwcm90b3R5cGUiLCJtYXRjaGVzIiwibXNNYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJjbG9zZXN0IiwicyIsImVsIiwicGFyZW50RWxlbWVudCIsInBhcmVudE5vZGUiLCJub2RlVHlwZSJdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUdBLElBQUksQ0FBQ0EsT0FBTyxDQUFDQyxTQUFSLENBQWtCQyxPQUF2QixFQUFnQztBQUM1QkYsU0FBTyxDQUFDQyxTQUFSLENBQWtCQyxPQUFsQixHQUE0QkYsT0FBTyxDQUFDQyxTQUFSLENBQWtCRSxpQkFBbEIsSUFDeEJILE9BQU8sQ0FBQ0MsU0FBUixDQUFrQkcscUJBRHRCO0FBRUg7O0FBRUQsSUFBSSxDQUFDSixPQUFPLENBQUNDLFNBQVIsQ0FBa0JJLE9BQXZCLEVBQWdDO0FBQzVCTCxTQUFPLENBQUNDLFNBQVIsQ0FBa0JJLE9BQWxCLEdBQTRCLFVBQVVDLENBQVYsRUFBYTtBQUNyQyxRQUFJQyxFQUFFLEdBQUcsSUFBVDs7QUFFQSxPQUFHO0FBQ0MsVUFBSUEsRUFBRSxDQUFDTCxPQUFILENBQVdJLENBQVgsQ0FBSixFQUFtQixPQUFPQyxFQUFQO0FBQ25CQSxRQUFFLEdBQUdBLEVBQUUsQ0FBQ0MsYUFBSCxJQUFvQkQsRUFBRSxDQUFDRSxVQUE1QjtBQUNILEtBSEQsUUFHU0YsRUFBRSxLQUFLLElBQVAsSUFBZUEsRUFBRSxDQUFDRyxRQUFILEtBQWdCLENBSHhDOztBQUlBLFdBQU8sSUFBUDtBQUNILEdBUkQ7QUFTSDtBQUVEOzs7Ozs7QUFJQSxJQUFJLENBQUNWLE9BQU8sQ0FBQ0MsU0FBUixDQUFrQkksT0FBdkIsRUFBZ0M7QUFDNUJMLFNBQU8sQ0FBQ0MsU0FBUixDQUFrQkksT0FBbEIsR0FBNEIsVUFBVUMsQ0FBVixFQUFhO0FBQ3JDLFFBQUlDLEVBQUUsR0FBRyxJQUFUOztBQUVBLE9BQUc7QUFDQyxVQUFJQSxFQUFFLENBQUNMLE9BQUgsQ0FBV0ksQ0FBWCxDQUFKLEVBQW1CLE9BQU9DLEVBQVA7QUFDbkJBLFFBQUUsR0FBR0EsRUFBRSxDQUFDQyxhQUFILElBQW9CRCxFQUFFLENBQUNFLFVBQTVCO0FBQ0gsS0FIRCxRQUdTRixFQUFFLEtBQUssSUFBUCxJQUFlQSxFQUFFLENBQUNHLFFBQUgsS0FBZ0IsQ0FIeEM7O0FBSUEsV0FBTyxJQUFQO0FBQ0gsR0FSRDtBQVNIIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL3NyYy9wb2x5ZmlsbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBvbHlmaWxsIGZvciBtYXRjaGVzKClcbiAqL1xuaWYgKCFFbGVtZW50LnByb3RvdHlwZS5tYXRjaGVzKSB7XG4gICAgRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlcyA9IEVsZW1lbnQucHJvdG90eXBlLm1zTWF0Y2hlc1NlbGVjdG9yIHx8XG4gICAgICAgIEVsZW1lbnQucHJvdG90eXBlLndlYmtpdE1hdGNoZXNTZWxlY3Rvcjtcbn1cblxuaWYgKCFFbGVtZW50LnByb3RvdHlwZS5jbG9zZXN0KSB7XG4gICAgRWxlbWVudC5wcm90b3R5cGUuY2xvc2VzdCA9IGZ1bmN0aW9uIChzKSB7XG4gICAgICAgIHZhciBlbCA9IHRoaXM7XG5cbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgaWYgKGVsLm1hdGNoZXMocykpIHJldHVybiBlbDtcbiAgICAgICAgICAgIGVsID0gZWwucGFyZW50RWxlbWVudCB8fCBlbC5wYXJlbnROb2RlO1xuICAgICAgICB9IHdoaWxlIChlbCAhPT0gbnVsbCAmJiBlbC5ub2RlVHlwZSA9PT0gMSk7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG59XG5cbi8qKlxuICogUG9seWZpbGwgZm9yIGNsb3Nlc3QoKVxuICogLSBSZWxpZXMgb24gbWF0Y2hlcygpIGFib3ZlLlxuICovXG5pZiAoIUVsZW1lbnQucHJvdG90eXBlLmNsb3Nlc3QpIHtcbiAgICBFbGVtZW50LnByb3RvdHlwZS5jbG9zZXN0ID0gZnVuY3Rpb24gKHMpIHtcbiAgICAgICAgdmFyIGVsID0gdGhpcztcblxuICAgICAgICBkbyB7XG4gICAgICAgICAgICBpZiAoZWwubWF0Y2hlcyhzKSkgcmV0dXJuIGVsO1xuICAgICAgICAgICAgZWwgPSBlbC5wYXJlbnRFbGVtZW50IHx8IGVsLnBhcmVudE5vZGU7XG4gICAgICAgIH0gd2hpbGUgKGVsICE9PSBudWxsICYmIGVsLm5vZGVUeXBlID09PSAxKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/src/polyfills.js\n");

/***/ }),

/***/ "./resources/scss/theme/login.scss":
/*!*****************************************!*\
  !*** ./resources/scss/theme/login.scss ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Nzcy90aGVtZS9sb2dpbi5zY3NzPzI0MjgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Nzcy90aGVtZS9sb2dpbi5zY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/scss/theme/login.scss\n");

/***/ }),

/***/ "./resources/scss/theme/theme.scss":
/*!*****************************************!*\
  !*** ./resources/scss/theme/theme.scss ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Nzcy90aGVtZS90aGVtZS5zY3NzPzg5OTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Nzcy90aGVtZS90aGVtZS5zY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/scss/theme/theme.scss\n");

/***/ }),

/***/ 0:
/*!*******************************************************************************************************************************************!*\
  !*** multi ./resources/js/src/app.js ./resources/js/src/polyfills.js ./resources/scss/theme/theme.scss ./resources/scss/theme/login.scss ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /Users/ryanthompson/Sites/streams.local/vendor/anomaly/flow-theme/resources/js/src/app.js */"./resources/js/src/app.js");
__webpack_require__(/*! /Users/ryanthompson/Sites/streams.local/vendor/anomaly/flow-theme/resources/js/src/polyfills.js */"./resources/js/src/polyfills.js");
__webpack_require__(/*! /Users/ryanthompson/Sites/streams.local/vendor/anomaly/flow-theme/resources/scss/theme/theme.scss */"./resources/scss/theme/theme.scss");
module.exports = __webpack_require__(/*! /Users/ryanthompson/Sites/streams.local/vendor/anomaly/flow-theme/resources/scss/theme/login.scss */"./resources/scss/theme/login.scss");


/***/ })

/******/ });